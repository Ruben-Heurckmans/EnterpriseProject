server:
  port: 8085

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    reactor.netty: INFO
#   org.springframework.security: TRACE

spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_CLIENTID}
#            client-secret: ${GOOGLE_CLIENTSECRET}
#            scope: openid,profile,email
#      resourceserver:
#        jwt:
#          issuer-uri: https://accounts.google.com
#          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs

  cloud:
    gateway:
      routes:
        - id: review-service
          uri: http://review-service:8082  # Overeenkomstig met de service-naam in Docker Compose
          predicates:
            - Path=/review/**
          filters:
            - StripPrefix=1
        - id: restaurant-service
          uri: http://restaurant-service:8081  # Overeenkomstig met de service-naam in Docker Compose
          predicates:
            - Path=/restaurant/**
          filters:
            - StripPrefix=1
        - id: user-service
          uri: http://user-service:8083  # Overeenkomstig met de service-naam in Docker Compose
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
        - id: image-service
          uri: http://image-service:8084  # Overeenkomstig met de service-naam in Docker Compose
          predicates:
            - Path=/image/**
          filters:
            - StripPrefix=1